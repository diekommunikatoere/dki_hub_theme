name: Release Build

permissions:
    contents: write

on:
    workflow_dispatch:
        inputs:
            release_tag:
                description: "Release tag (e.g., v1.0.0)"
                required: true
                type: string
            force_rebuild_all:
                description: "Force rebuild all blocks (ignore change detection)"
                required: false
                type: boolean
                default: false
            verbose:
                description: "Enable detailed logging"
                required: false
                type: boolean
                default: true
            parallel:
                description: "Enable parallel block building"
                required: false
                type: boolean
                default: true

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout source
              uses: actions/checkout@v4
              with:
                  ref: main
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "22"
                  cache: "npm"
                  cache-dependency-path: "blocks/*/package.json"

            - name: Cache block dependencies
              uses: actions/cache@v4
              with:
                  path: blocks/*/node_modules
                  key: blocks-${{ hashFiles('blocks/*/package-lock.json') }}
                  restore-keys: |
                      blocks-

            - name: Cache block build artifacts
              uses: actions/cache@v4
              with:
                  path: blocks/*/build
                  key: build-artifacts-${{ hashFiles('blocks/*/src/**/*', 'blocks/*/package.json') }}
                  restore-keys: |
                      build-artifacts-
                      build-

            - name: Detect changed files
              id: detect_changes
              run: |
                  LAST_TAG="${{ inputs.release_tag }}"
                  CHANGED_FILES=$(git diff --name-only $LAST_TAG HEAD | grep -E "^(blocks/|theme/|shared/)" || true)
                  CHANGED_BLOCKS=$(echo "$CHANGED_FILES" | awk -F/ '{print $2}' | sort | uniq | xargs)
                  echo "changed_blocks=$CHANGED_BLOCKS" >> $GITHUB_OUTPUT
                  echo "$CHANGED_FILES" > changed_files.txt

            - name: Make release script executable
              run: chmod +x scripts/release-build.sh

            - name: Run release build
              run: |
                  BUILD_FLAGS=""
                  if [ "${{ inputs.verbose }}" = "true" ]; then
                    BUILD_FLAGS="$BUILD_FLAGS --verbose"
                  fi
                  if [ "${{ inputs.parallel }}" = "true" ]; then
                    BUILD_FLAGS="$BUILD_FLAGS --parallel"
                  fi
                  ./scripts/release-build.sh $BUILD_FLAGS
              env:
                  RELEASE_TAG: ${{ inputs.release_tag }}
                  FORCE_REBUILD_ALL: ${{ inputs.force_rebuild_all }}
                  CHANGED_BLOCKS: ${{ steps.detect_changes.outputs.changed_blocks }}
                  CHANGED_FILES_FILE: changed_files.txt

            - name: Verify release directory
              run: |
                  if [ ! -d "release" ]; then
                    echo "‚ùå Release directory not found after build"
                    exit 1
                  fi
                  echo "‚úÖ Release directory created successfully"

            - name: Upload release artifact
              uses: actions/upload-artifact@v4
              with:
                  name: release
                  path: release/

    publish:
        runs-on: ubuntu-latest
        needs: build

        steps:
            - name: Download release artifact
              uses: actions/download-artifact@v4
              with:
                  name: release
                  path: release

            - name: Publish release branch
              uses: peaceiris/actions-gh-pages@v4
              with:
                  publish_dir: ./release
                  publish_branch: release
                  force_orphan: true
                  commit_message: "Release: ${{ inputs.release_tag }} [ci skip]"

            - name: Summary
              run: |
                  echo "üéâ Release build completed successfully!"
                  echo "üì¶ Release tag: ${{ inputs.release_tag }}"
                  echo "üåø Release branch: release"
                  echo "üìÅ Artifacts available in release branch"
