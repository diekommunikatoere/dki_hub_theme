name: Release Build

permissions:
    contents: write

on:
    workflow_dispatch:
        inputs:
            release_tag:
                description: "Release tag (e.g., v1.0.0)"
                required: true
                type: string

jobs:
    release:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  ref: main
                  fetch-depth: 0
                  persist-credentials: true

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "22"
                  cache: "npm"
                  cache-dependency-path: "blocks/*/package.json"

            - name: Make release script executable
              run: chmod +x scripts/release-build.sh

            - name: Run release build
              run: ./scripts/release-build.sh
              env:
                  RELEASE_TAG: ${{ inputs.release_tag }}

            - name: Verify release directory
              run: |
                  if [ ! -d "release" ]; then
                    echo "‚ùå Release directory not found after build"
                    exit 1
                  fi
                  echo "‚úÖ Release directory created successfully"

            - name: Publish release branch
              run: |
                  git config --local user.name "github-actions[bot]"
                  git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"

                  RELEASE_BRANCH="release"
                  if git rev-parse --verify origin/$RELEASE_BRANCH >/dev/null 2>&1; then
                    git fetch origin $RELEASE_BRANCH:$RELEASE_BRANCH
                    git checkout $RELEASE_BRANCH
                  else
                    git checkout --orphan $RELEASE_BRANCH
                  fi

                  git rm -rf . || true
                  cp -r release/. .

                  git add .
                  git commit -m "Release: ${{ inputs.release_tag }} [ci skip]" || echo "No changes to commit"
                  git push origin $RELEASE_BRANCH --force

            - name: Run smoke tests
              run: |
                  echo "Running smoke tests..."
                  # Check that release directory was created
                  if [ ! -d "release" ]; then
                    echo "‚ùå Release directory not found"
                    exit 1
                  fi

                  # Check each block has expected artifacts
                  for block_dir in blocks/*/; do
                    if [ -f "$block_dir/package.json" ]; then
                      block_name=$(basename "$block_dir")
                      echo "Checking block: $block_name"
                      
                      # Check block directory exists in release
                      if [ ! -d "release/blocks/$block_name" ]; then
                        echo "‚ùå Block $block_name not found in release"
                        exit 1
                      fi
                      
                      echo "‚úÖ Block $block_name found in release"
                    fi
                  done

                  echo "‚úÖ All smoke tests passed"

            - name: Summary
              run: |
                  echo "üéâ Release build completed successfully!"
                  echo "üì¶ Release tag: ${{ inputs.release_tag }}"
                  echo "üåø Release branch: release"
                  echo "üìÅ Artifacts available in release branch"
